plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'jacoco'
}

group = 'com.evaluacion'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Core
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// JWT
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

	//ObjectMapper
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Base de datos en memoria
	runtimeOnly 'com.h2database:h2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // incluye JUnit 5
	testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.10"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.80 // 80%
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

